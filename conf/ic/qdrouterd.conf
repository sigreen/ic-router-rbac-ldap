##
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License
##

# See the qdrouterd.conf (5) manual page for information about this
# file's format and options.

router {
    mode: standalone
    id: Router.A
}

listener {
    host: 0.0.0.0
    port: amqp
    #authenticatePeer: yes
    #saslMechanisms: DIGEST-MD5
    sslProfile: router-ssl-profile
    requireSsl: yes
    authenticatePeer: no
    saslMechanisms: ANONYMOUS
}

listener {
   host: 0.0.0.0
   port: 8080
   authenticatePeer: no
   http: yes
}

connector {
    name: master
    host: localhost
    port: 5673
    role: route-container
}

connector {
   name: slave
   host: localhost
   port: 5772
   role: route-container
}

sslProfile {
    name: router-ssl-profile
    certDb: /home/ec2-user/amq/amq-ha-replicated-demo/target/router/ca-cert.pem 
    certFile: /home/ec2-user/amq/amq-ha-replicated-demo/target/router/ca-cert.pem
    keyFile: /home/ec2-user/amq/amq-ha-replicated-demo/target/router/router-key-pwd.pem
}

autoLink {
    addr: queue.grs
    dir: out
    connection: master
}

autoLink {
    addr: queue.grs
    dir: in
    connection: master
}

autoLink {
    addr: queue.foo
    dir: out
    connection: master
}

autoLink {
    addr: queue.foo
    dir: in
    connection: master
}

autoLink {
    addr: queue.grs
    dir: out
    connection: slave
}

autoLink {
    addr: queue.grs
    dir: in
    connection: slave
}

autoLink {
    addr: queue.foo
    dir: out
    connection: slave
}

autoLink {
    addr: queue.foo
    dir: in
    connection: slave
}

address {
    prefix: queue 
    waypoint: yes
}

address {
    prefix: multicast
    distribution: multicast
}

address {
    prefix: unicast
    distribution: closest
}

address {
    prefix: exclusive
    distribution: closest
}

address {
    prefix: broadcast
    distribution: multicast
}